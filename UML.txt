@startuml

class Document {
    + string FilePath { get; }
    + string FileName 
    # string Content { get; protected set; }
    # List<string> NormalizedTerms { get; protected set; }
    # HashSet<string> StopWords
    # char[] _splitChars
    - EnglishProter2Stemmer _stemmer
    + List<string> GetTerms()
    + List<string> GetUniqueTerms()
    {abstract} # void GetFileContents()
    - void Parse()
}
class TxtDocument extends Document {
    # override void GetFileContents()
}
class CsvDocument extends Document {
    # override void GetFileContents()
}
class HtmlDocument extends Document {
    # override void GetFileContents()
}
class PDFDocument extends Document {
    # override void GetFileContents()
}
class JsonDocument extends Document {
    # override void GetFileContents()
}
class XmlDocument extends Document {
    # override void GetFileContents()
}
class Query extends Document {
    # override void GetFileContents
}

class Vectorizer {
    + Dictionary<string, double> Vector { get; protected set; }
    {abstract} + Dictionary<string, double> VectorizeDocuments(List<Document> documents)
    {abstract} + Dictionary<string, double> VectorizeDocument(Document query)
}
class TFIDF extends Vectorizer {
    + override Dictionary<string, double> VectorizeDocuments(List<Document> documents)
    + override Dictionary<string, double> VectorizeDocument(Document query)
    - Dictionary<string, double> CalculateTFScores(Document document)
    + Dictionary<string, double> CalculateTFIDF(Document document)
}
class NormalizedBagOfWords extends Vectorizer {
    + override Dictionary<string, double> VectorizeDocuments(List<Document> documents)
    + override Dictionary<string, double> VectorizeDocument(Document document)
}

class Similarity {
    {abstract} + double CalculateSimilarity(Dictionary<string, double> Vector1, Dictionary<string, double> Vector2)
}
class CosineSimilarity extends Similarity {
    + override double CalculateCosineSimilarity(Dictionary<string, double> Vector1, Dictionary<string, double> Vector2)
}
class EuclideanSimilarity extends Similarity {
    + override double CalculateCosineSimilarity(Dictionary<string, double> Vector1, Dictionary<string, double> Vector2)
}
class Indexer {
    - Vectorizer _vectorizerHandler
    - List<Document> _documents
    - {readonly} List<string> _supportedExtensions
    + Dictionary<string, double> _tfidfValues
    - Document IndexFile(string filePath)
    - string NormalizeQuery(string query)
    + void LoadIndex(string indexPath)
    + (List<Document>, Dictionary<string, double>) DeserializeIndexData(string indexData)
    + void IndexFolder(string folderPath, string type, string distance)
    + List<string> Search(string query, int k, string distance)

}
Indexer --> Document : Indexes *
Indexer --> Vectorizer : uses >
Indexer --> Similarity : uses >
Similarity -->  Vectorizer : uses terms from >

@enduml
